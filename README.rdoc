= Master May I?

Clean, simple and flexible model based authorization designed to work with AuthLogic and InheritedResources.

== Executive Summary

{MasterMayI Master May I} adds query methods to all your models, which can be used to determine who's allowed to do what.

* {MasterMayI::ActiveRecordExtensions::ClassMethods#creatable_by? +Model.creatable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::ClassMethods#creatable? +Model.creatable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#readable_by? +@model.readable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#readable? +@model.readable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#editable_by? +@model.editable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#editable? +@model.editable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#destroyable_by? +@model.destroyable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#destroyable? +@model.destroyable?+} 

These are just methods (that default to always returning true), so customizing the rules is as easy as overriding the methods:

  class Note < ActiveRecord::Base
    def self.creatable_by?(user)
      user and user.administrator?
    end
  end

If you call {MasterMayI::ActiveRecordExtensions::ClassMethods#records_creating_user +records_creating_user+} in your model, then the user from the Authlogic UserSession is automatically stored whenever a record is created.

  class Note < ActiveRecord::Base
    records_creating_user
    
    def self.creatable_by?(user)
      user and created_by?(user)
    end
  end

MasterMayI also includes the {MasterMayI::InheritedResourcesExtensions#protects_restful_actions +protects_restful_actions+} controller class method, which integrates with InheritedResources in order to automatically check with the model in a set of before filters.

  class NotesController < InheritedResources::Base
    protects_restful_actions
  end

== Model Level Authorization

== Inherited Resources Support

=== Customization

==== Before Filters

==== Redirects messages

==== Flash messages

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 Tammer Saleh. See LICENSE for details.
