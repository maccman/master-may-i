= Master May I?

=== Clean, simple and flexible model based authorization designed to work with AuthLogic and InheritedResources.

=== If these docs looks all wanky, then be sure you're viewing them on the rdoc.info site: http://rdoc.info/projects/tsaleh/master-may-i

== Overview

{MasterMayI Master May I} adds query methods to all your models, which can be used to determine who's allowed to do what. {MasterMayI::ActiveRecordExtensions Learn more.}

* {MasterMayI::ActiveRecordExtensions::ClassMethods#creatable_by? +Model.creatable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::ClassMethods#creatable? +Model.creatable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#readable_by? +@model.readable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#readable? +@model.readable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#editable_by? +@model.editable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#editable? +@model.editable?+} 
* {MasterMayI::ActiveRecordExtensions::InstanceMethods#destroyable_by? +@model.destroyable_by?(user)+} 
  and 
  {MasterMayI::ActiveRecordExtensions::InstanceMethods#destroyable? +@model.destroyable?+} 

These are just methods (that default to always returning true), so customizing the rules is as easy as overriding the methods:

  class Note < ActiveRecord::Base
    def self.creatable_by?(user)
      user and user.administrator?
    end
  end

If you call {MasterMayI::ActiveRecordExtensions::ClassMethods#records_creating_user +records_creating_user+} in your model, then the user from the Authlogic UserSession is automatically stored whenever a record is created.  {MasterMayI::ActiveRecordExtensions::ClassMethods#records_creating_user Learn more.}

  class Note < ActiveRecord::Base
    records_creating_user
    
    def self.creatable_by?(user)
      user and created_by?(user)
    end
  end

MasterMayI also includes the {MasterMayI::ControllerExtensions#protects_restful_actions +protects_restful_actions+} controller class method, which integrates with InheritedResources in order to automatically check with the model in a set of before filters.  {MasterMayI::ControllerExtensions#protects_restful_actions Learn more.}

  class NotesController < InheritedResources::Base
    protects_restful_actions
  end

Finally, MasterMayI adds a few utility methods to your ApplicationController:

* {MasterMayI::ControllerExtensions::InstanceMethods#current_user +current_user+}
* {MasterMayI::ControllerExtensions::InstanceMethods#logged_in? +logged_in?+}
* {MasterMayI::ControllerExtensions::InstanceMethods#require_user +require_user+}
* {MasterMayI::ControllerExtensions::InstanceMethods#deny_access +deny_access+}
* {MasterMayI::ControllerExtensions::InstanceMethods#store_location +store_location+}
* {MasterMayI::ControllerExtensions::InstanceMethods#redirect_back_or +redirect_back_or url+}

{MasterMayI::ControllerExtensions::InstanceMethods Learn more.}

== Copyright

Copyright (c) 2009 Tammer Saleh. See LICENSE for details.
